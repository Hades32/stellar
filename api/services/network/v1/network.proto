syntax = "proto3";

package stellar.services.network.v1;

import "google/protobuf/empty.proto";
import weak "gogoproto/gogo.proto";

option go_package = "github.com/ehazlett/stellar/api/services/network/v1;network";

service Network {
        rpc Info(InfoRequest) returns (InfoResponse);
        rpc AllocateSubnet(AllocateSubnetRequest) returns (AllocateSubnetResponse);
        rpc GetSubnet(GetSubnetRequest) returns (GetSubnetResponse);
        rpc DeallocateSubnet(DeallocateSubnetRequest) returns (google.protobuf.Empty);
        rpc Subnets(google.protobuf.Empty) returns (SubnetsResponse);
        rpc AllocateIP(AllocateIPRequest) returns (AllocateIPResponse);
        rpc GetIP(GetIPRequest) returns (GetIPResponse);
        rpc ReleaseIP(ReleaseIPRequest) returns (google.protobuf.Empty);
        rpc Configure(ConfigureRequest) returns (google.protobuf.Empty);
        rpc AddRoute(AddRouteRequest) returns (google.protobuf.Empty);
        rpc DeleteRoute(DeleteRouteRequest) returns (google.protobuf.Empty);
        rpc Routes(google.protobuf.Empty) returns (RoutesResponse);
}

message InfoRequest {}
message InfoResponse {
        string id = 1 [(gogoproto.customname) = "ID"];
}

message AllocateSubnetRequest {
        string node = 1;
}

message AllocateSubnetResponse {
        string subnet_cidr = 1 [(gogoproto.customname) = "SubnetCIDR"];
        string node = 2;
}

message GetSubnetRequest {
        string node = 1;
}

message GetSubnetResponse {
        string subnet_cidr = 1 [(gogoproto.customname) = "SubnetCIDR"];
}

message DeallocateSubnetRequest {
        string subnet_cidr = 1 [(gogoproto.customname) = "SubnetCIDR"];
        string node = 2;
}

message AllocateIPRequest {
        string id = 1 [(gogoproto.customname) = "ID"];
        string subnet_cidr = 2 [(gogoproto.customname) = "SubnetCIDR"];
        string node = 3;
}

message AllocateIPResponse {
        string ip = 1 [(gogoproto.customname) = "IP"];
        string node = 2;
}

message GetIPRequest {
        string id = 1 [(gogoproto.customname) = "ID"];
        string node = 2;
}

message GetIPResponse {
        string ip = 1 [(gogoproto.customname) = "IP"];
}

message ReleaseIPRequest {
        string id = 1 [(gogoproto.customname) = "ID"];
        string ip = 2 [(gogoproto.customname) = "IP"];
        string node = 3;
}

message SubnetsResponse {
        repeated Subnet subnets = 1;
}

message Subnet {
        string cidr = 1 [(gogoproto.customname) = "CIDR"];
        string gateway = 2;
}

message ConfigureRequest {
        Subnet subnet = 1;
}

message AddRouteRequest {
        string cidr = 1 [(gogoproto.customname) = "CIDR"];
        string target = 2;
}

message DeleteRouteRequest {
        string cidr = 1 [(gogoproto.customname) = "CIDR"];
        string target = 2;
}

message Route {
        string cidr = 1 [(gogoproto.customname) = "CIDR"];
        string target = 2;
}

message RoutesResponse {
        repeated Route routes = 1;
}
