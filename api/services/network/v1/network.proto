syntax = "proto3";

package stellar.services.network.v1;

import "google/protobuf/empty.proto";
import weak "gogoproto/gogo.proto";

option go_package = "github.com/ehazlett/stellar/api/services/network/v1;network";

service Network {
  rpc AllocateSubnet(AllocateSubnetRequest) returns (google.protobuf.Empty);
  rpc DeallocateSubnet(DeallocateSubnetRequest) returns (google.protobuf.Empty);
  rpc Subnets(google.protobuf.Empty) returns (SubnetsResponse);
  rpc AllocateIP(AllocateIPRequest) returns (AllocateIPResponse);
  rpc ReleaseIP(ReleaseIPRequest) returns (google.protobuf.Empty);
  rpc Configure(ConfigureRequest) returns (google.protobuf.Empty);
}

message AllocateSubnetRequest {
  string subnet_cidr = 1 [(gogoproto.customname) = "SubnetCIDR"];
}

message DeallocateSubnetRequest {
  string subnet_cidr = 1 [(gogoproto.customname) = "SubnetCIDR"];
}

message AllocateIPRequest {
  string subnet_cidr = 1 [(gogoproto.customname) = "SubnetCIDR"];
}

message AllocateIPResponse {
  string ip = 1 [(gogoproto.customname) = "IP"];
}

message ReleaseIPRequest {
  string ip = 1 [(gogoproto.customname) = "IP"];
}

message SubnetsResponse {
  repeated Subnet subnets = 1;
}

message Subnet {
  string cidr = 1 [(gogoproto.customname) = "CIDR"];
  string gateway = 2;
}

message ConfigureRequest {
  Subnet subnet = 1;
}
