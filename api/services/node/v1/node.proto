syntax = "proto3";

package stellar.services.node.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/ehazlett/stellar/api/services/node/v1;node";

service Node {
  rpc Containers(ContainersRequest) returns (ContainersResponse);
  rpc Container(ContainerRequest) returns (ContainerResponse);
  rpc Images(ImagesRequest) returns (ImagesResponse);
  rpc SetupContainerNetwork(ContainerNetworkRequest) returns (google.protobuf.Empty);
  rpc CreateContainer(CreateContainerRequest) returns (google.protobuf.Empty);
  rpc DeleteContainer(DeleteContainerRequest) returns (google.protobuf.Empty);
}

message ContainersRequest {
  repeated string filters = 1;
}

message Container {
  string id = 1 [(gogoproto.customname) = "ID"];
  string image = 2;
  map<string,string> labels = 3;
  google.protobuf.Any spec = 4;
  string snapshotter = 5;

  message Task {
    uint32 pid = 1;
  }

  Task task = 6;
  string runtime = 7;
}

message ContainersResponse {
  repeated Container containers = 1;
}

message ContainerRequest {
  string id = 1 [(gogoproto.customname) = "ID"];
}

message ContainerResponse {
  Container container = 1;
}

message ImagesRequest {}

message Image {
  string id = 1 [(gogoproto.customname) = "ID"];
}

message ImagesResponse {
  repeated Image images = 1;
}

message ContainerNetworkRequest {
  string id = 1 [(gogoproto.customname) = "ID"];
  string ip = 2 [(gogoproto.customname) = "IP"];
  string network = 3;
  string gateway = 4;
}

message Process {
  uint32 uid = 1;
  uint32 gid = 2;
  repeated string args = 3;
  repeated string env = 4;
}

message Mount {
  string type = 1;
  string source = 2;
  string destination = 4;
  repeated string options = 5;
}

enum Protocol {
  TCP = 0;
  UDP = 1;
  HTTP = 2;
}

message Endpoint {
  string service = 1;
  Protocol protocol = 2;
  string host = 3;
  uint32 port = 4;
}

message Service {
  string name = 1;
  string image = 2;
  string runtime = 3;
  string snapshotter = 4;
  Process process = 5;
  repeated string labels = 6;
  bool network = 7;
  repeated Mount mounts = 8;
  repeated Endpoint endpoints = 9;
}

message CreateContainerRequest {
  string application = 1;
  Service service = 2;
}

message DeleteContainerRequest {
  string id = 1 [(gogoproto.customname) = "ID"];
}
